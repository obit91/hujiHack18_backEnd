package gib.backend.rest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import backend.database.domain.User;
import backend.database.repositories.UserRepository;

//@Controller // This means that this class is a Controller
//@RequestMapping(path = "/db") // This means URL's start with /demo (after Application path)
public class EditDB {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

//	@GetMapping(path = "/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser(@RequestParam String first, @RequestParam String last) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(first);
		n.setEmail(last);
		userRepository.save(n);
		return "Saved";
	}

//	@GetMapping(path = "/all")
	public @ResponseBody ResponseEntity<Iterable<User>> getAllUsers() {
		// This returns a JSON or XML with the users
		Iterable<User> findAll = userRepository.findAll();
		return new ResponseEntity<Iterable<User>>(findAll, HttpStatus.OK);
	}
}